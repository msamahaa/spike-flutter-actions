# .github/workflows/flutter-ci.yml

name: CI - Validar Pull Request

on:
  pull_request:
    branches:
      - 'staging'
      - 'main'

permissions:
  contents: read
  checks: write
  pull-requests: read

jobs:
  # JOB 1: TESTES UNITÁRIOS E DE WIDGET (Rápido)
  unit-tests:
    name: Unit & Widget Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v4
      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Instalar Dependências
        run: flutter pub get
      - name: Rodar Testes Unitários e de Widget
        run: flutter test --machine > tests.json || exit-code
        continue-on-error: true
      - name: Publicar Relatório de Testes
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: "Resultados dos Testes Unitários"
          path: tests.json
          reporter: flutter-json

  # JOB 2: TESTES DE INTEGRAÇÃO (Lento, Confiável e com Relatório)
  integration-tests:
    name: Integration Tests
    needs: unit-tests
    runs-on: macos-latest
    timeout-minutes: 25

    steps:
      - name: Checkout do Repositório
        uses: actions/checkout@v4

      # PASSO DE DEBUG: Imprime o conteúdo do workflow para validação.
      # Pode ser removido depois que o problema for resolvido.
      - name: Show Workflow File Content
        run: |
          echo "Verificando o conteúdo do arquivo de workflow..."
          cat .github/workflows/flutter-ci.yml

      - name: Setup Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - name: Instalar Dependências
        run: flutter pub get

      - name: Start Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          script: echo "no" | avdmanager create avd --force --name "test" --package "system-images;android-33;google_apis;x86_64"

      - name: Wait for Emulator to Boot
        run: |
          adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d "\r") ]]; do sleep 1; done; input keyevent 82'
          echo "Emulator is fully booted."

      - name: Disable Emulator Animations
        run: |
          adb shell settings put global window_animation_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global animator_duration_scale 0.0

      - name: Run Integration Tests
        run: flutter test integration_test --machine > integration_tests.json || exit-code
        continue-on-error: true

      - name: Publicar Relatório de Testes de Integração
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: "Resultados dos Testes de Integração"
          path: integration_tests.json
          reporter: flutter-json